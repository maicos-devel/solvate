[tox]
minversion = 4.9.0
# these are the environments that will run when you
# execute `tox` in the command-line
# bellow you will find explanations for all environments
envlist =
    lint
    build
    tests
    docs

lint_folders =
    "{toxinidir}/setup.py" \
    "{toxinidir}/nonmaicos" \
    "{toxinidir}/tests"

# configures which environments run with each python version
[testenv]
# Passing through all enviroment variables to tox jobs
passenv = *
platform =
    linux: linux
    macos: darwin
    windows: win32

# Tox will not pass the environment variables to the packaging step, so we need
# to explicitly set them here. (see https://github.com/tox-dev/tox/issues/2543)
[testenv:.pkg]
setenv =
    USE_CYTHON = True

# configures the unittest environment
[testenv:tests]
description = Run test suite with pytest and {basepython}.
setenv =
    PYTHONPATH={toxinidir}/tests
    PYTHONUNBUFFERED=yes
usedevelop = true
deps =
    coverage[toml]
    hypothesis
    pytest
    pytest-cov
    pytest-mock
    setuptools
commands =
    # Run unit tests
    pytest \
        --cov \
        --cov-append \
        --cov-config={toxinidir}/pyproject.toml \
        --junitxml=report.xml \
        --cov-report=term \
        --cov-report=xml:coverage.xml \
        {posargs}

    # Run documentation tests
    #pytest --doctest-modules --pyargs maicos

[testenv:lint]
description = Run linters and type checks
skip_install = true
deps =
    black
    blackdoc
    flake8
    flake8-docstrings
    flake8-bugbear
    flake8-sphinx-links
    mypy
    isort
    sphinx-lint
commands =
    flake8 {[tox]lint_folders}
    black --check --diff {[tox]lint_folders}
    blackdoc --check --diff {[tox]lint_folders} "{toxinidir}/README.rst"
    isort --check-only --diff {[tox]lint_folders}
    mypy {[tox]lint_folders}
    ; sphinx-lint \
    ;     --enable all \
    ;     --max-line-length 88 \
    ;     -i "{toxinidir}/docs/src/examples" \
    ;     {[tox]lint_folders} "{toxinidir}/README.rst"

[testenv:build]
description = Asserts package build integrity for {platform} with {basepython}.
usedevelop = true
deps =
    build
    check-manifest
    twine

allowlist_externals =
    bash

commands =
    python -m build
    twine check dist/*.tar.gz dist/*.whl
    check-manifest {toxinidir}
    # Workaround using shells since tox does not support wildcards
    bash -c "python -m pip install --force-reinstall dist/nonmaicos-*.tar.gz"
    bash -c "python -m pip install --force-reinstall dist/nonmaicos-*.whl"

[testenv:docs]
description = Building the package documentation.
usedevelop = true
deps =
    -r docs/requirements.txt
    gitpython
extras = examples
allowlist_externals =
    bash
commands =
    sphinx-build {posargs:-E} -W -b html docs/src dist/docs
    bash -c "set -e && cd {toxinidir}/examples && bash usage-bash.sh"
    python '{toxinidir}/developer/check_changelog.py'

[testenv:format]
description = Abuse tox to do actual formatting on all files.
skip_install = true
deps =
    black
    blackdoc
    isort
commands =
    black {[tox]lint_folders}
    blackdoc {[tox]lint_folders} "{toxinidir}/README.md"
    isort {[tox]lint_folders}

[flake8]
max_line_length = 88
ignore =
    E203
    D400
    D401
    W503
docstring-convention = numpy
exclude =
    nonmaicos/_version.py
    versioneer.py
