[tox]
minversion = 4.9.0
# these are the environments that will run when you
# execute `tox` in the command-line
# bellow you will find explanations for all environments
envlist =
    lint
    build
    tests
    ; docs

lint_folders =
    "{toxinidir}/src" \
    "{toxinidir}/tests"

# configures which environments run with each python version
[testenv]
# Passing through all enviroment variables to tox jobs
passenv = *
platform =
    linux: linux
    macos: darwin
    windows: win32

# Default package_env, used for building source distribution
[testenv:.pkg]

# configures the unittest environment
[testenv:tests]
description = Run test suite with pytest and {basepython}.
usedevelop = true
deps =
    coverage[toml]
    hypothesis
    pytest
    pytest-cov
    pytest-mock
    setuptools
commands =
    # Run unit tests
    pytest {posargs}

    # Run documentation tests on all Python files and the README.rst
    ; pytest --doctest-modules --pyargs solvate

[testenv:lint]
description = Run linters and type checks
package = skip
deps =
    ruff
    mypy
    sphinx-lint
commands =
    ruff format --diff {[tox]lint_folders}
    ruff check {[tox]lint_folders}
    mypy {[tox]lint_folders}
    ; sphinx-lint \
    ;     --enable all \
    ;     --disable line-too-long \
    ;     -i "{toxinidir}/docs/src/examples" \
    ;     {[tox]lint_folders} "{toxinidir}/README.rst"

[testenv:build]
platform =
    linux: linux
    macos: darwin
    windows: win32
description = Asserts package build integrity for {platform} with {basepython}.
usedevelop = true
deps =
    build
    check-manifest
    twine
allowlist_externals =
    linux: bash
    macos: zsh
    windows: foreach

commands_pre = python {toxinidir}/developer/clean_dist_check.py
commands =
    python -m build
    twine check dist/*.tar.gz dist/*.whl
    check-manifest {toxinidir}
    # Workaround using shells since tox does not support wildcards
    linux: bash -c "python -m pip install --force-reinstall dist/maicos-*.tar.gz"
    linux: bash -c "python -m pip install --force-reinstall dist/maicos-*.whl"
    macos: zsh -c "python -m pip install --force-reinstall dist/maicos-*.tar.gz"
    macos: zsh -c "python -m pip install --force-reinstall dist/maicos-*.whl"
    windows: foreach ($i in ls dist\*.tar.gz) \{pip install --force-reinstall $i\}
    windows: foreach ($i in ls dist\*.whl) \{pip install --force-reinstall $i\}

; [testenv:docs]
; description = Building the package documentation.
; usedevelop = true
; deps = -r docs/requirements.txt
; extras = examples
; allowlist_externals =
;     bash
; commands =
;     sphinx-build \
;         {posargs:-E} \
;         --builder html \
;         --doctree-dir docs/build/doctree \
;         --fail-on-warning \
;         docs/src docs/build/html

;     bash -c "set -e && cd {toxinidir}/examples && bash usage-bash.sh"

[testenv:format]
description = Abuse tox to do actual formatting on all files.
package = skip
deps = ruff
commands =
    ruff format {[tox]lint_folders}
    ruff check --fix-only {[tox]lint_folders} "{toxinidir}/README.rst" {posargs}
